name: 'Auto Update'
 
on:
  schedule:
  - cron: "23 0 * * *"
  workflow_dispatch:
 
jobs:
  sync:
    name: 'Auto Update'
    runs-on: ubuntu-latest
 
    defaults:
      run:
        shell: bash
 
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.MY_SECRETS_TOKEN }}
        submodules: true

    - name: Git Submodule Update
      run: |
        git submodule init
        git submodule update --remote
        
    - name: uugamebooster auto update
      run: |
        cd packages/net/uugamebooster
        ./update.sh

    - name: fakehttp auto update
      run: |
        cd packages/net/fakehttp
        ./update.sh
    
    - name: fakesip auto update
      run: |
        cd packages/net/fakesip
        ./update.sh

    - name: Commit update
      run: |
        set -euo pipefail

        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

        changed() {
          git status --porcelain -- "$1" | grep -q .
        }

        pkg_version_from_makefile() {
          awk -F 'PKG_VERSION:=' '/^PKG_VERSION:=/{print $2}' "$1" | xargs
        }

        submodule_short_sha() {
          local path="$1"
          git -C "$path" rev-parse --short HEAD 2>/dev/null || \
          git submodule status -- "$path" | awk '{print $1}' | sed 's/^[-+ ]//'
        }

        join_by() {
          local sep="$1"; shift
          [ "$#" -gt 0 ] || { printf ''; return; }
          local out="$1"; shift || true
          for x in "$@"; do out="${out}${sep}${x}"; done
          printf '%s' "$out"
        }

        segments=()

        if changed "packages/net/uugamebooster/Makefile"; then
          ver="$(pkg_version_from_makefile "packages/net/uugamebooster/Makefile" || true)"
          segments+=("uugamebooster to ${ver:-<unknown>}")
          git add "packages/net/uugamebooster/Makefile"
        fi

        if changed "luci/applications/luci-app-easytier"; then
          sha="$(submodule_short_sha "luci/applications/luci-app-easytier" || true)"
          segments+=("Submodule luci-app-easytier to ${sha:-<unknown>}")
          git add ".gitmodules" "luci/applications/luci-app-easytier"
        fi

        if changed "luci/applications/luci-app-netspeedtest"; then
          sha="$(submodule_short_sha "luci/applications/luci-app-netspeedtest" || true)"
          segments+=("Submodule luci-app-netspeedtest to ${sha:-<unknown>}")
          git add ".gitmodules" "luci/applications/luci-app-netspeedtest"
        fi

        if changed "packages/net/fakehttp/Makefile"; then
          ver="$(pkg_version_from_makefile "packages/net/fakehttp/Makefile" || true)"
          segments+=("fakehttp to ${ver:-<unknown>}")
          git add "packages/net/fakehttp/Makefile"
        fi

        if changed "packages/net/fakesip/Makefile"; then
          ver="$(pkg_version_from_makefile "packages/net/fakesip/Makefile" || true)"
          segments+=("fakesip to ${ver:-<unknown>}")
          git add "packages/net/fakesip/Makefile"
        fi

        if [ "${#segments[@]}" -gt 0 ]; then
          commit_msg="Update: $(join_by ' and ' "${segments[@]}")"
          git commit -m "$commit_msg"
          git push
        fi

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        retain_days: 1
        keep_minimum_runs: 3
